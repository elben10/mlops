name: "CI"
on:
  pull_request:

env:
  DAGSTER_BUCKET: dagster
  DAGSTER_DATABASE: dagster
  DAGSTER_NETWORK: stacks_default

  DOCKER_REGISTRY: ghcr.io/${{ github.repository_owner }}/

  FEAST_DATABASE: feast

  MLFLOW_BUCKET: mlflow
  MLFLOW_DATABASE: mlflow

  POSTGRES_USER: changethis
  POSTGRES_PASSWORD: changethis
  POSTGRES_HOST: timescaledb
  POSTGRES_PORT: 5432

  S3_ENDPOINT: http://cloudserver:8000
  S3_ACCESS_KEY: changethis
  S3_SECRET_KEY: changethis

jobs:
  build-images:
    runs-on: ubuntu-22.04
    name: Build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - run: |
          docker compose -f stacks/docker-compose.yml config > stacks/merged.docker-compose.yml
      - name: Build
        uses: docker/bake-action@v3
        with:
          files: |
            stacks/merged.docker-compose.yml
  # Until a release is made larger than 1.28, we need to build kompose from source
  build-kompose:
    runs-on: ubuntu-22.04
    name: Build kompose
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v4
        with:
          go-version: ^1.19

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
        with:
          repository: kubernetes/kompose

      - name: Build
        run: make bin

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: "kompose"
          path: "kompose"
  e2e-tests:
    runs-on: ubuntu-22.04
    name: E2E Tests
    needs: [build-images, build-kompose]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - name: Install poetry
        run: |
          pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "poetry"
      - name: Install python dependencies
        run: poetry install
      - name: Install kompose
        uses: actions/download-artifact@master
        with:
          name: kompose
          path: /usr/local/bin
      - name: Install k8s cluster
        run: kind create cluster --config config/kind/config.yml
      - run: |
          docker compose -f stacks/docker-compose.yml config > stacks/merged.docker-compose.yml
      - name: Build
        uses: docker/bake-action@v3
        with:
          files: |
            stacks/merged.docker-compose.yml
      - name: Deploy stack
        run: |
          chmod +x /usr/local/bin/kompose
          kind load docker-image ${DOCKER_REGISTRY}base:latest
          kompose convert -f stacks/merged.docker-compose.yml -o manifests/k8s.yml
          kubectl apply -f manifests
      - name: Run tests
        run: poetry run pytest -m e2e
  integration-tests:
    runs-on: ubuntu-22.04
    name: Integration Tests
    needs: [build-images, build-kompose]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - name: Install poetry
        run: |
          pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "poetry"
      - name: Install python dependencies
        run: poetry install
      - name: Install kompose
        uses: actions/download-artifact@master
        with:
          name: kompose
          path: /usr/local/bin
      - name: Install k8s cluster
        run: kind create cluster --config config/kind/config.yml
      - run: |
          docker compose -f stacks/docker-compose.yml config > stacks/merged.docker-compose.yml
      - name: Build
        uses: docker/bake-action@v3
        with:
          files: |
            stacks/merged.docker-compose.yml
      - name: Deploy stack
        run: |
          chmod +x /usr/local/bin/kompose
          kind load docker-image ${DOCKER_REGISTRY}base:latest
          kompose convert -f stacks/merged.docker-compose.yml -o manifests/k8s.yml
          kubectl apply -f manifests
      - name: Run tests
        run: poetry run pytest -m integration
  unit-tests:
    runs-on: ubuntu-22.04
    name: Unit Tests
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install poetry
        run: |
          pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "poetry"
      - name: Install python dependencies
        run: poetry install
      - name: Run tests
        run: poetry run pytest -m unit
  deploy-images:
    needs: ["e2e-tests", "integration-tests", "unit-tests"]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - run: |
          docker compose -f stacks/docker-compose.yml config > stacks/merged.docker-compose.yml
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/bake-action@v3
        with:
          files: |
            stacks/merged.docker-compose.yml
          push: true
  deploy-k8s:
    needs: ["deploy-images"]
    runs-on: ["self-hosted"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install kompose
        uses: actions/download-artifact@master
        with:
          name: kompose
          path: /usr/local/bin
      - name: Deploy stack
        run: |
          chmod +x /usr/local/bin/kompose
          kompose convert -f stacks/docker-compose.yml -o manifests/k8s.yml
          kubectl apply -f manifests
