compute_logs:
  module: dagster_aws.s3.compute_log_manager
  class: S3ComputeLogManager
  config:
    bucket:
      env: S3_BUCKET
    endpoint_url:
      env: S3_ENDPOINT

scheduler:
  module: dagster.core.scheduler
  class: DagsterDaemonScheduler

run_coordinator:
  module: dagster.core.run_coordinator
  class: QueuedRunCoordinator

run_launcher:
  module: dagster_docker
  class: DockerRunLauncher
  config:
    env_vars:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_HOST
      - POSTGRES_PORT
      - POSTGRES_DATABASE
      - S3_BUCKET
      - S3_ENDPOINT
    network:
      env: DOCKER_NETWORK
    container_kwargs:
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock

run_storage:
  module: dagster_postgres.run_storage
  class: PostgresRunStorage
  config:
    postgres_db:
      hostname:
        env: POSTGRES_HOST
      username:
        env: POSTGRES_USER
      password:
        env: POSTGRES_PASSWORD
      port:
        env: POSTGRES_PORT
      db_name:
        env: POSTGRES_DATABASE

schedule_storage:
  module: dagster_postgres.schedule_storage
  class: PostgresScheduleStorage
  config:
    postgres_db:
      hostname:
        env: POSTGRES_HOST
      username:
        env: POSTGRES_USER
      password:
        env: POSTGRES_PASSWORD
      port:
        env: POSTGRES_PORT
      db_name:
        env: POSTGRES_DATABASE

event_log_storage:
  module: dagster_postgres.event_log
  class: PostgresEventLogStorage
  config:
    postgres_db:
      hostname:
        env: POSTGRES_HOST
      username:
        env: POSTGRES_USER
      password:
        env: POSTGRES_PASSWORD
      port:
        env: POSTGRES_PORT
      db_name:
        env: POSTGRES_DATABASE
